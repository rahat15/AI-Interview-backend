version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: dockerfile
    expose:
      - "8000"   # expose only inside the Docker network
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/interview_coach
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - API_V1_STR=/v1
      - PROJECT_NAME=Interview Coach API
      - BACKEND_CORS_ORIGINS=["https://your-frontend-domain.com","http://localhost:3000"]
      - EMBEDDINGS_MODEL=local
    volumes:
      - ./uploads:/app/uploads
      - ./samples:/app/samples
    depends_on:
      - postgres
      - redis
    networks:
      - interview-network
    restart: unless-stopped
    env_file:
      - .env    

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=interview_coach
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - interview-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - interview-network
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: dockerfile
    command: python -m apps.worker.queue
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/interview_coach
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - EMBEDDINGS_MODEL=local
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - interview-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot   # shared folder for ACME challenges
    depends_on:
      - api
    networks:
      - interview-network
    restart: unless-stopped

certbot:
  image: certbot/certbot
  container_name: certbot_ssl
  volumes:
    - certbot_data:/etc/letsencrypt
    - certbot_www:/var/www/certbot   # must match nginx volume
  entrypoint: /bin/sh -c "while :; do sleep 12h & wait $${!}; certbot renew; done"
  networks:
    - interview-network

volumes:
  postgres_data:
  redis_data:
  certbot_data:
  certbot_www:   # <â€” added

networks:
  interview-network:
    driver: bridge
